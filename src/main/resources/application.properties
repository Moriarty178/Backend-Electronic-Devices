spring.application.name=back-end

spring.datasource.url=jdbc:postgresql://localhost:5432/electronicdevices
spring.datasource.username=postgres
spring.datasource.password=17082002
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

jwt.secret=Ghd73mJ2mX9sR3pQ5L8vY2cS7kE4rT9fW1xQ7hN6bZ3pD2gF4uZ
jwt.expiration = 86400000

#Provided path to get static files as: img, text, audio, ...
spring.web.resources.static-locations=file:///D:/electronic_devices/

spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

redis.key.prefix.chat_box=chatbox:

# Redis Config
redis.chat_box.host=127.0.0.1
redis.chat_box.port=6379
redis.pattern.topic=__keyevent@0__:expired

# * >>> health
management.endpoints.web.exposure.include=health

# Config to use the specified port special <instances>, if not available --> use default 8080
server.port=${PORT:8080}

# run instance: java -jar target/back-end-0.0.1-SNAPSHOT.jar --PORT=808x
# Create file .jar: mvn clean package (-DskipTests : b? test ?? ch?y nhanh h?n)
# test curl http://...


#spring.application.name=back-end
######################## {env_var:default_value}

## PostgreSQL Configuration
#spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/electronicdevices}
#spring.datasource.username=${SPRING_DATASOURCE_USERNAME:postgres}
#spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:17082002}
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
#
## JWT Configuration
#jwt.secret=${JWT_SECRET:Ghd73mJ2mX9sR3pQ5L8vY2cS7kE4rT9fW1xQ7hN6bZ3pD2gF4uZ}
#jwt.expiration=${JWT_EXPIRATION:86400000}
#
## Static Resources
#spring.web.resources.static-locations=${SPRING_STATIC_LOCATION:file:///static/}
#
## Redis Configuration
#redis.key.prefix.chat_box=chatbox:
#redis.chat_box.host=${REDIS_CHAT_BOX_HOST:127.0.0.1}
#redis.chat_box.port=${REDIS_CHAT_BOX_PORT:6379}
#redis.pattern.topic=__keyevent@0__:expired
